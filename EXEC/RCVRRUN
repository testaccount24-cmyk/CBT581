/*------------------------ REXX ------------------------------*
 ¦   DRIVE RCVRCNFG                                           ¦
 ¦                                                            ¦
 ¦   THIS EXEC IS CALLED BY THE ISPF SELECT IN RCVRSTRT       ¦
 ¦   THIS EXEC PROMPTS FOR THE TABLE NAME, JOB DATASET AND    ¦
 ¦   JCL SKELETON DATASET.  IF THEY ARE NOT SPECIFIED IN THE  ¦
 ¦   RCVRSTRT EXEC AS DATA AFTER $2 LINE.  JOB AND SKELETON   ¦
 ¦   DATASET MAYBE THE SAME, BUT THEY MUST EXIST.  TABLE NAME ¦
 ¦   ALLOWS YOU TO HAVE MULTIPLE DEFINITIONS OF THE DISASTER  ¦
 ¦   SITE DASD.                                               ¦
 *------------------------------------------------------------*/

ARG pdsn pexec phlq .

 trace

 C_TABLE_NAME = ""
 C_JOB_DSN    = ""
 C_SKEL_DSN   = ""

 dsnx =  STRIP(pdsn,'B',"'")
 #DSN =  "'" || dsnx || "(" || pexec || ")'"

 IF SYSDSN(#DSN) ¬= "OK" THEN
   DO
     SAY "RCVRRUN - " || #DSN || " NOT FOUND CANNOT CONTINUE"
     RETURN
   END

 "NEWSTACK"                         /* CREATE NEW STACK         */
 #DSN = "DSN(" || #DSN || ")"       /* ALLOCATE TABLE           */
 "ALLOC FI($$INPUT) SHR" #DSN

 "EXECIO * DISKR $$INPUT (FINIS"    /* READ DATA INTO STACK     */
 "FREE FI($$INPUT)"                 /* AND CLOSE INPUT          */
 #COUNT = QUEUED()                  /* HOW MANY RECORDS         */

 IF #COUNT > 0 THEN                 /* IS THERE DATA?           */
  DO
   #I = 0                             /* INITIALIZE ARRAY INDEX   */
   DO #COUNT                          /* LOOP TO END OF STACK     */
     PARSE UPPER PULL #T #T1 #T2 #T3. /* PARSE DATA FROM STACK    */
     IF #T == "$2" THEN               /* HAVE INPUT DATA          */
       DO
         #VAR.#I = #T1                /* SET VARIABLE NAME        */
         #VAR1.#I = phlq || #T2       /* SET DATASET NAME         */
         IF #T1 == "C_SKEL_MEM" THEN  /* HAVE Skeleton Member name*/
           #VAR1.#I = #T2             /* SET it in place          */
         #I = #I + 1                  /* INCREMENT INDEX          */
       END
   END
   "DELSTACK"                         /* DELETE STACK             */

   #COUNT = #I                        /* COUNT OF ITEM READ       */
   #I = 0                             /* INITIALIZE INDEX         */

   DO #COUNT
     LIB_SET = #VAR.#I || " = """ || #VAR1.#I || """"
     INTERPRET LIB_SET                /* ACTUALLY SET VARIABLES   */
     #I = #I + 1                      /* INCREMENT INDEX          */
   END
  END

  RCVTBL = C_TABLE_NAME        /* Initialize Panel Fields */
  RCVSUB = C_JOB_DSN
  RCVSKL = C_SKEL_DSN
  RCVMEM = C_SKEL_MEM

  address ISPEXEC

  do forever                   /* Panel Display Loop     */

     ZCMD = ""

     "DISPLAY PANEL(CNFGSTRT)"

     select

           when rc = 8 then         /* EXIT Requested     */
                do
                  leave
                end

           when rc = 0 then         /* EXIT Requested     */
                do
                  call proc_verify_data

                  select

                         when result = 4 then    /* Null Panel */
                              do
                                leave
                              end

                         when result = 0 then    /* Data Is Good */
                              do
                                call RCVRCNFG RCVTBL RCVSUB RCVSKL RCVMEM
                                exit 0
                              end

                  otherwise                      /* Data Is Bad */
                           do
                             iterate
                           end
                  end

                end

     otherwise
              do
                say "RCVRRUN - Unexpected Error on Display."
                leave
              end
     end
  end

 /*------------------------------------------------------------------*
  ¦ SUB-ROUTINE - Verify Data Entry Panel PROC_VERIFY_DATA           ¦
  ¦                                                                  ¦
  ¦ This sub-routine verifys the data entered on the panel           ¦
  ¦                                                                  ¦
  ¦ (1) Table name is entered                                        ¦
  ¦ (2) The Submit dsn exists                                        ¦
  ¦ (3) The Skeleton dsn exists                                      ¦
  ¦ (3) The Skeleton mem exists                                      ¦
  ¦                                                                  ¦
  *------------------------------------------------------------------*/

 proc_verify_data:

      if RCVTBL= "" then
         do
           say "RCVRRUN - Table name must be entered"
           return 4
         end

      if RCVSUB= "" then
         do
           say "RCVRRUN - Submit dataset name must be entered"
           return 4
         end

      if RCVSKL= "" then
         do
           say "RCVRRUN - Skeleton dataset name must be entered"
           return 4
         end

      #dsn = "'" || RCVSUB || "'"
      if sysdsn(#dsn) ¬= "OK" then
        do
           say "RCVRRUN - Submit dataset name not found"
           return 4
        end

      #dsn = "'" || RCVSKL || "'"
      if sysdsn(#dsn) ¬= "OK" then
        do
           say "RCVRRUN - Skeleton dataset name not found"
           return 4
        end

      if RCVMEM= "" then
         do
           say "RCVRRUN - Skeleton member name must be entered"
           return 4
         end

      return 0
