/*------------------------ REXX ------------------------------*
 ¦   START CONFIGURATION PROCESSOR                            ¦
 ¦                                                            ¦
 ¦   THIS EXEC WILL DRIVE THE RECOVERY PROCESS.               ¦
 ¦   BEFORE EXECUTION YOU MUST SUPPLY THE DATASET NAMES       ¦
 ¦   BY REPLACING THE DATASET LITERALS WITH THE ONES THAT     ¦
 ¦   YOU ARE GOING TO USE.                                    ¦
 ¦                                                            ¦
 ¦   THE VALUES ARE SPECIFIED LATER IN THE EXEC ON THE LINES  ¦
 ¦   WITH $1.  The HLQ for the file is determined by the      ¦
 ¦   HLQ of the "explicit" executing PDS dataset.             ¦
 ¦                                                            ¦
 *------------------------------------------------------------*/

 PARSE SOURCE x1 x2 xexec x4 xdsn .

 hlql = INDEX(xdsn,'.',1)
 hlq  = SUBSTR(xdsn,1,hlql)

 #DSN = "'" || xdsn || "(" || xexec || ")'"

 "NEWSTACK"                         /* CREATE NEW STACK         */
 #DSN = "DSN(" || #DSN || ")"       /* ALLOCATE TABLE           */
 "ALLOC FI($$INPUT) SHR" #DSN

 "EXECIO * DISKR $$INPUT (FINIS"    /* READ DATA INTO STACK     */
 "FREE FI($$INPUT)"                 /* AND CLOSE INPUT          */
 #COUNT = QUEUED()                  /* HOW MANY RECORDS         */

 IF #COUNT < 1 THEN                 /* IS THERE DATA?           */
   DO
     SAY "NO RECORDS READ - CANNOT CONTINUE"
     RETURN
   END

 #I = 0                             /* INITIALIZE ARRAY INDEX   */
 DO #COUNT                          /* LOOP TO END OF STACK     */
   PARSE UPPER PULL #T #T1 #T2 #T3. /* PARSE DATA FROM STACK    */
   IF #T == "$1" THEN               /* HAVE INPUT DATA          */
     DO
       #VAR.#I = #T1                /* SET VARIABLE NAME        */
       #VAR1.#I = hlq || #T2        /* SET DATASET NAME         */
       #I = #I + 1                  /* INCREMENT INDEX          */
     END
 END
 "DELSTACK"                         /* DELETE STACK             */

 #COUNT = #I                        /* COUNT OF ITEM READ       */
 #I = 0                             /* INITIALIZE INDEX         */

 DO #COUNT
   LIB_SET = #VAR.#I || " = ""'" || #VAR1.#I || "'"""
   INTERPRET LIB_SET                /* ACTUALLY SET VARIABLES   */
   #I = #I + 1                      /* INCREMENT INDEX          */
 END

 ADDRESS TSO

 /* SET MESSAGE ID ON */

 "PROFILE MSGID"

 /* SET TEMPORARY EXEC LIB */

 "ALTLIB ACTIVATE APPLICATION(EXEC) DS("|| xdsn ||")"

 ADDRESS ISPEXEC

 /* SET PANEL, SKELETON, TABLE AND TAILORING OUTPUT LIBS */

 "LIBDEF ISPPLIB DATASET ID("||LIB_PLIB||")"
 "LIBDEF ISPSLIB DATASET ID("||LIB_SLIB||")"
 "LIBDEF ISPFILE DATASET ID("||LIB_FILE||")"
 "LIBDEF ISPTLIB DATASET ID("||LIB_TABL||")"
 "LIBDEF ISPTABL DATASET ID("||LIB_TABL||")"

 /* SELECT DRIVER */

 "SELECT CMD(RCVRRUN "|| xdsn xexec hlq ||") NEWAPPL(RCVR) PASSLIB"

 /* RE-SET PANEL, SKELETON, TABLE AND TAILORING OUTPUT LIBS */

 "LIBDEF ISPPLIB"
 "LIBDEF ISPSLIB"
 "LIBDEF ISPFILE"
 "LIBDEF ISPTLIB"
 "LIBDEF ISPTABL"

 ADDRESS TSO

 /* RE-SET TEMPORARY EXEC LIB */

 "ALTLIB DEACTIVATE APPLICATION(EXEC)"

 EXIT 0


/*------------------------------------------------------------*
 ¦                                                            ¦
 ¦   DATA FILE FOR CONFIGURATOR                               ¦
 ¦                                                            ¦
 ¦   COL 1: IDENTIFIER                                        ¦
 ¦          $1 IS FOR STARTUP DATASET NAMES                   ¦
 ¦          $2 IS FOR PANEL CONFIGURATOR                      ¦
 ¦       2: VARIABLE                                          ¦
 ¦       3: DATASET NAME                                      ¦
 ¦       4: X  MUST BE THERE - for parse to work              ¦
 ¦                                                            ¦
 ¦   Dataset Hilvl Qualifier is set by executing dataset      ¦
 ¦   name.                                                    ¦
 ¦                                                            ¦
 *------------------------------------------------------------*/

 $1 LIB_PLIB  RECOVER.ISPANEL X
 $1 LIB_SLIB  RECOVER.ISPSKEL X
 $1 LIB_FILE  RECOVER.ISPSKEL X
 $1 LIB_TABL  RECOVER.ISPTABL X

 $2 C_JOB_DSN  RECOVER.ISPSKEL X
 $2 C_SKEL_DSN RECOVER.ISPSKEL X
 $2 C_SKEL_MEM AGCOSKEL        X

